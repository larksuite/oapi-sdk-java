// Code generated by lark suite oapi sdk gen
package com.lark.oapi.service.application.v6.model;

import com.google.gson.annotations.SerializedName;
import com.lark.oapi.core.annotation.Path;
import com.lark.oapi.core.annotation.Query;

public class GetApplicationAppVersionReq {

  @Query
  @SerializedName("lang")
  private String lang;
  @Query
  @SerializedName("user_id_type")
  private String userIdType;
  @Path
  @SerializedName("app_id")
  private String appId;
  @Path
  @SerializedName("version_id")
  private Long versionId;

  // builder 开始
  public GetApplicationAppVersionReq() {
  }

  public GetApplicationAppVersionReq(Builder builder) {
    this.lang = builder.lang;
    this.userIdType = builder.userIdType;
    this.appId = builder.appId;
    this.versionId = builder.versionId;
  }

  public static Builder newBuilder() {
    return new Builder();
  }

  public String getLang() {
    return this.lang;
  }

  public void setLang(String lang) {
    this.lang = lang;
  }

  public String getUserIdType() {
    return this.userIdType;
  }

  public void setUserIdType(String userIdType) {
    this.userIdType = userIdType;
  }

  public String getAppId() {
    return this.appId;
  }

  public void setAppId(String appId) {
    this.appId = appId;
  }

  public Long getVersionId() {
    return this.versionId;
  }

  public void setVersionId(Long versionId) {
    this.versionId = versionId;
  }

  public static class Builder {

    private String lang;
    private String userIdType;
    private String appId;
    private Long versionId;

    public Builder lang(String lang) {
      this.lang = lang;
      return this;
    }

    public Builder lang(com.lark.oapi.service.application.v6.enums.I18nKeyEnum lang) {
      this.lang = lang.getValue();
      return this;
    }

    public Builder userIdType(String userIdType) {
      this.userIdType = userIdType;
      return this;
    }

    public Builder userIdType(
        com.lark.oapi.service.application.v6.enums.UserIdTypeEnum userIdType) {
      this.userIdType = userIdType.getValue();
      return this;
    }

    public Builder appId(String appId) {
      this.appId = appId;
      return this;
    }

    public Builder versionId(Long versionId) {
      this.versionId = versionId;
      return this;
    }

    public GetApplicationAppVersionReq build() {
      return new GetApplicationAppVersionReq(this);
    }
  }
}
