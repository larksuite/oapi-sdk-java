// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.sheets.v3.model;

import com.google.gson.annotations.SerializedName;

public class Condition {

  @SerializedName("filter_type")
  private String filterType;
  @SerializedName("compare_type")
  private String compareType;
  @SerializedName("expected")
  private String[] expected;

  // builder 开始
  public Condition() {
  }

  public Condition(Builder builder) {
    this.filterType = builder.filterType;
    this.compareType = builder.compareType;
    this.expected = builder.expected;
  }

  public static Builder newBuilder() {
    return new Builder();
  }

  public String getFilterType() {
    return this.filterType;
  }

  public void setFilterType(String filterType) {
    this.filterType = filterType;
  }

  public String getCompareType() {
    return this.compareType;
  }

  public void setCompareType(String compareType) {
    this.compareType = compareType;
  }

  public String[] getExpected() {
    return this.expected;
  }

  public void setExpected(String[] expected) {
    this.expected = expected;
  }

  public static class Builder {

    private String filterType;
    private String compareType;
    private String[] expected;

    public Builder filterType(String filterType) {
      this.filterType = filterType;
      return this;
    }

    public Builder compareType(String compareType) {
      this.compareType = compareType;
      return this;
    }

    public Builder expected(String[] expected) {
      this.expected = expected;
      return this;
    }


    public Condition build() {
      return new Condition(this);
    }
  }
}
