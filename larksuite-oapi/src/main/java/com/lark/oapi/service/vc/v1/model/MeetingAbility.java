// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.vc.v1.model;

import com.google.gson.annotations.SerializedName;

public class MeetingAbility {

  @SerializedName("use_video")
  private Boolean useVideo;
  @SerializedName("use_audio")
  private Boolean useAudio;
  @SerializedName("use_share_screen")
  private Boolean useShareScreen;
  @SerializedName("use_follow_screen")
  private Boolean useFollowScreen;
  @SerializedName("use_recording")
  private Boolean useRecording;
  @SerializedName("use_pstn")
  private Boolean usePstn;

  // builder 开始
  public MeetingAbility() {
  }

  public MeetingAbility(Builder builder) {
    this.useVideo = builder.useVideo;
    this.useAudio = builder.useAudio;
    this.useShareScreen = builder.useShareScreen;
    this.useFollowScreen = builder.useFollowScreen;
    this.useRecording = builder.useRecording;
    this.usePstn = builder.usePstn;
  }

  public static Builder newBuilder() {
    return new Builder();
  }

  public Boolean getUseVideo() {
    return this.useVideo;
  }

  public void setUseVideo(Boolean useVideo) {
    this.useVideo = useVideo;
  }

  public Boolean getUseAudio() {
    return this.useAudio;
  }

  public void setUseAudio(Boolean useAudio) {
    this.useAudio = useAudio;
  }

  public Boolean getUseShareScreen() {
    return this.useShareScreen;
  }

  public void setUseShareScreen(Boolean useShareScreen) {
    this.useShareScreen = useShareScreen;
  }

  public Boolean getUseFollowScreen() {
    return this.useFollowScreen;
  }

  public void setUseFollowScreen(Boolean useFollowScreen) {
    this.useFollowScreen = useFollowScreen;
  }

  public Boolean getUseRecording() {
    return this.useRecording;
  }

  public void setUseRecording(Boolean useRecording) {
    this.useRecording = useRecording;
  }

  public Boolean getUsePstn() {
    return this.usePstn;
  }

  public void setUsePstn(Boolean usePstn) {
    this.usePstn = usePstn;
  }

  public static class Builder {

    private Boolean useVideo;
    private Boolean useAudio;
    private Boolean useShareScreen;
    private Boolean useFollowScreen;
    private Boolean useRecording;
    private Boolean usePstn;

    public Builder useVideo(Boolean useVideo) {
      this.useVideo = useVideo;
      return this;
    }

    public Builder useAudio(Boolean useAudio) {
      this.useAudio = useAudio;
      return this;
    }

    public Builder useShareScreen(Boolean useShareScreen) {
      this.useShareScreen = useShareScreen;
      return this;
    }

    public Builder useFollowScreen(Boolean useFollowScreen) {
      this.useFollowScreen = useFollowScreen;
      return this;
    }

    public Builder useRecording(Boolean useRecording) {
      this.useRecording = useRecording;
      return this;
    }

    public Builder usePstn(Boolean usePstn) {
      this.usePstn = usePstn;
      return this;
    }


    public MeetingAbility build() {
      return new MeetingAbility(this);
    }
  }
}
