// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.bitable.v1.model;

import com.google.gson.annotations.SerializedName;
import com.lark.oapi.core.annotation.Path;
import com.lark.oapi.core.annotation.Query;

public class ListAppTableRecordReq {

  @Query
  @SerializedName("view_id")
  private String viewId;
  @Query
  @SerializedName("filter")
  private String filter;
  @Query
  @SerializedName("sort")
  private String sort;
  @Query
  @SerializedName("field_names")
  private String fieldNames;
  @Query
  @SerializedName("text_field_as_array")
  private Boolean textFieldAsArray;
  @Query
  @SerializedName("user_id_type")
  private String userIdType;
  @Query
  @SerializedName("display_formula_ref")
  private Boolean displayFormulaRef;
  @Query
  @SerializedName("automatic_fields")
  private Boolean automaticFields;
  @Query
  @SerializedName("page_token")
  private String pageToken;
  @Query
  @SerializedName("page_size")
  private Integer pageSize;
  @Path
  @SerializedName("app_token")
  private String appToken;
  @Path
  @SerializedName("table_id")
  private String tableId;

  // builder 开始
  public ListAppTableRecordReq() {
  }

  public ListAppTableRecordReq(Builder builder) {
    this.viewId = builder.viewId;
    this.filter = builder.filter;
    this.sort = builder.sort;
    this.fieldNames = builder.fieldNames;
    this.textFieldAsArray = builder.textFieldAsArray;
    this.userIdType = builder.userIdType;
    this.displayFormulaRef = builder.displayFormulaRef;
    this.automaticFields = builder.automaticFields;
    this.pageToken = builder.pageToken;
    this.pageSize = builder.pageSize;
    this.appToken = builder.appToken;
    this.tableId = builder.tableId;
  }

  public static Builder newBuilder() {
    return new Builder();
  }

  public String getViewId() {
    return this.viewId;
  }

  public void setViewId(String viewId) {
    this.viewId = viewId;
  }

  public String getFilter() {
    return this.filter;
  }

  public void setFilter(String filter) {
    this.filter = filter;
  }

  public String getSort() {
    return this.sort;
  }

  public void setSort(String sort) {
    this.sort = sort;
  }

  public String getFieldNames() {
    return this.fieldNames;
  }

  public void setFieldNames(String fieldNames) {
    this.fieldNames = fieldNames;
  }

  public Boolean getTextFieldAsArray() {
    return this.textFieldAsArray;
  }

  public void setTextFieldAsArray(Boolean textFieldAsArray) {
    this.textFieldAsArray = textFieldAsArray;
  }

  public String getUserIdType() {
    return this.userIdType;
  }

  public void setUserIdType(String userIdType) {
    this.userIdType = userIdType;
  }

  public Boolean getDisplayFormulaRef() {
    return this.displayFormulaRef;
  }

  public void setDisplayFormulaRef(Boolean displayFormulaRef) {
    this.displayFormulaRef = displayFormulaRef;
  }

  public Boolean getAutomaticFields() {
    return this.automaticFields;
  }

  public void setAutomaticFields(Boolean automaticFields) {
    this.automaticFields = automaticFields;
  }

  public String getPageToken() {
    return this.pageToken;
  }

  public void setPageToken(String pageToken) {
    this.pageToken = pageToken;
  }

  public Integer getPageSize() {
    return this.pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public String getAppToken() {
    return this.appToken;
  }

  public void setAppToken(String appToken) {
    this.appToken = appToken;
  }

  public String getTableId() {
    return this.tableId;
  }

  public void setTableId(String tableId) {
    this.tableId = tableId;
  }

  public static class Builder {

    private String viewId;
    private String filter;
    private String sort;
    private String fieldNames;
    private Boolean textFieldAsArray;
    private String userIdType;
    private Boolean displayFormulaRef;
    private Boolean automaticFields;
    private String pageToken;
    private Integer pageSize;
    private String appToken;
    private String tableId;

    public Builder viewId(String viewId) {
      this.viewId = viewId;
      return this;
    }

    public Builder filter(String filter) {
      this.filter = filter;
      return this;
    }

    public Builder sort(String sort) {
      this.sort = sort;
      return this;
    }

    public Builder fieldNames(String fieldNames) {
      this.fieldNames = fieldNames;
      return this;
    }

    public Builder textFieldAsArray(Boolean textFieldAsArray) {
      this.textFieldAsArray = textFieldAsArray;
      return this;
    }

    public Builder userIdType(String userIdType) {
      this.userIdType = userIdType;
      return this;
    }

    public Builder userIdType(com.lark.oapi.service.bitable.v1.enums.UserIdTypeEnum userIdType) {
      this.userIdType = userIdType.getValue();
      return this;
    }

    public Builder displayFormulaRef(Boolean displayFormulaRef) {
      this.displayFormulaRef = displayFormulaRef;
      return this;
    }

    public Builder automaticFields(Boolean automaticFields) {
      this.automaticFields = automaticFields;
      return this;
    }

    public Builder pageToken(String pageToken) {
      this.pageToken = pageToken;
      return this;
    }

    public Builder pageSize(Integer pageSize) {
      this.pageSize = pageSize;
      return this;
    }

    public Builder appToken(String appToken) {
      this.appToken = appToken;
      return this;
    }

    public Builder tableId(String tableId) {
      this.tableId = tableId;
      return this;
    }

    public ListAppTableRecordReq build() {
      return new ListAppTableRecordReq(this);
    }
  }
}
