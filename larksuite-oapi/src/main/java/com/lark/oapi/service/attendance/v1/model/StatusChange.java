// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.attendance.v1.model;

import com.google.gson.annotations.SerializedName;

public class StatusChange {

  @SerializedName("index")
  private Integer index;
  @SerializedName("before_status")
  private String beforeStatus;
  @SerializedName("current_status")
  private String currentStatus;
  @SerializedName("before_supplement")
  private String beforeSupplement;
  @SerializedName("current_supplement")
  private String currentSupplement;
  @SerializedName("work_type")
  private String workType;

  // builder 开始
  public StatusChange() {
  }

  public StatusChange(Builder builder) {
    this.index = builder.index;
    this.beforeStatus = builder.beforeStatus;
    this.currentStatus = builder.currentStatus;
    this.beforeSupplement = builder.beforeSupplement;
    this.currentSupplement = builder.currentSupplement;
    this.workType = builder.workType;
  }

  public static Builder newBuilder() {
    return new Builder();
  }

  public Integer getIndex() {
    return this.index;
  }

  public void setIndex(Integer index) {
    this.index = index;
  }

  public String getBeforeStatus() {
    return this.beforeStatus;
  }

  public void setBeforeStatus(String beforeStatus) {
    this.beforeStatus = beforeStatus;
  }

  public String getCurrentStatus() {
    return this.currentStatus;
  }

  public void setCurrentStatus(String currentStatus) {
    this.currentStatus = currentStatus;
  }

  public String getBeforeSupplement() {
    return this.beforeSupplement;
  }

  public void setBeforeSupplement(String beforeSupplement) {
    this.beforeSupplement = beforeSupplement;
  }

  public String getCurrentSupplement() {
    return this.currentSupplement;
  }

  public void setCurrentSupplement(String currentSupplement) {
    this.currentSupplement = currentSupplement;
  }

  public String getWorkType() {
    return this.workType;
  }

  public void setWorkType(String workType) {
    this.workType = workType;
  }

  public static class Builder {

    private Integer index;
    private String beforeStatus;
    private String currentStatus;
    private String beforeSupplement;
    private String currentSupplement;
    private String workType;

    public Builder index(Integer index) {
      this.index = index;
      return this;
    }

    public Builder beforeStatus(String beforeStatus) {
      this.beforeStatus = beforeStatus;
      return this;
    }

    public Builder currentStatus(String currentStatus) {
      this.currentStatus = currentStatus;
      return this;
    }

    public Builder beforeSupplement(String beforeSupplement) {
      this.beforeSupplement = beforeSupplement;
      return this;
    }

    public Builder currentSupplement(String currentSupplement) {
      this.currentSupplement = currentSupplement;
      return this;
    }

    public Builder workType(String workType) {
      this.workType = workType;
      return this;
    }


    public StatusChange build() {
      return new StatusChange(this);
    }
  }
}
