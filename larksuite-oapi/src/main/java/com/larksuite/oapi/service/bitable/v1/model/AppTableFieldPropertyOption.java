// Code generated by lark suite oapi sdk gen
package com.larksuite.oapi.service.bitable.v1.model;
import com.larksuite.oapi.service.bitable.v1.enums.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.SerializedName;
import com.larksuite.oapi.core.annotation.Body;
import com.larksuite.oapi.core.annotation.Path;
import com.larksuite.oapi.core.annotation.Query;
import java.io.File;
import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import com.larksuite.oapi.core.utils.Strings;
import com.larksuite.oapi.core.response.BaseResponse;
public class AppTableFieldPropertyOption {
    @SerializedName("name")
    private String name;
    @SerializedName("id")
    private String id;
    @SerializedName("color")
    private Integer color;
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getId() {
        return this.id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public Integer getColor() {
        return this.color;
    }

    public void setColor(Integer color) {
        this.color = color;
    }


// builder 开始
  public AppTableFieldPropertyOption(){}

  public AppTableFieldPropertyOption(Builder builder){
      this.name = builder.name;
      this.id = builder.id;
      this.color = builder.color;
  }

    public static class Builder {
        private String name;
        private String id;
        private Integer color;
        public Builder name(String name) {
             this.name = name;
             return this;
        }
    
        public Builder id(String id) {
             this.id = id;
             return this;
        }
    
        public Builder color(Integer color) {
             this.color = color;
             return this;
        }
    
    
    public AppTableFieldPropertyOption build(){
        return new AppTableFieldPropertyOption(this);
      }
    }

    public static Builder newBuilder() {
        return new Builder();
    }
}
