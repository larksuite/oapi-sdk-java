// Code generated by lark suite oapi sdk gen
package com.larksuite.oapi.service.attendance.v1.model;
import com.larksuite.oapi.service.attendance.v1.enums.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.SerializedName;
import com.larksuite.oapi.core.annotation.Body;
import com.larksuite.oapi.core.annotation.Path;
import com.larksuite.oapi.core.annotation.Query;
import java.io.File;
import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import com.larksuite.oapi.core.utils.Strings;
import com.larksuite.oapi.core.response.BaseResponse;
public class UserStatsField {
    @SerializedName("stats_type")
    private String statsType;
    @SerializedName("user_id")
    private String userId;
    @SerializedName("fields")
    private Field[] fields;
    public String getStatsType() {
        return this.statsType;
    }

    public void setStatsType(String statsType) {
        this.statsType = statsType;
    }

    public String getUserId() {
        return this.userId;
    }

    public void setUserId(String userId) {
        this.userId = userId;
    }

    public Field[] getFields() {
        return this.fields;
    }

    public void setFields(Field[] fields) {
        this.fields = fields;
    }


// builder 开始
  public UserStatsField(){}

  public UserStatsField(Builder builder){
      this.statsType = builder.statsType;
      this.userId = builder.userId;
      this.fields = builder.fields;
  }

    public static class Builder {
        private String statsType;
        private String userId;
        private Field[] fields;
        public Builder statsType(String statsType) {
             this.statsType = statsType;
             return this;
        }
        public Builder statsType(com.larksuite.oapi.service.attendance.v1.enums.StatsTypeEnum statsType) {
             this.statsType = statsType.getValue();
             return this;
        }
    
        public Builder userId(String userId) {
             this.userId = userId;
             return this;
        }
    
        public Builder fields(Field[] fields) {
             this.fields = fields;
             return this;
        }
    
    
    public UserStatsField build(){
        return new UserStatsField(this);
      }
    }

    public static Builder newBuilder() {
        return new Builder();
    }
}
