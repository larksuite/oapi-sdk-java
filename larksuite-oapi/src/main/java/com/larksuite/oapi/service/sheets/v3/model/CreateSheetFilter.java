// Code generated by lark suite oapi sdk gen
package com.larksuite.oapi.service.sheets.v3.model;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.SerializedName;
import com.larksuite.oapi.core.annotation.Body;
import com.larksuite.oapi.core.annotation.Path;
import com.larksuite.oapi.core.annotation.Query;
import java.io.File;
import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import com.larksuite.oapi.core.utils.Strings;
import com.larksuite.oapi.core.response.BaseResponse;
public class CreateSheetFilter {
    @SerializedName("range")
    private String range;
    @SerializedName("col")
    private String col;
    @SerializedName("condition")
    private Condition condition;
    public String getRange() {
        return this.range;
    }

    public void setRange(String range) {
        this.range = range;
    }

    public String getCol() {
        return this.col;
    }

    public void setCol(String col) {
        this.col = col;
    }

    public Condition getCondition() {
        return this.condition;
    }

    public void setCondition(Condition condition) {
        this.condition = condition;
    }


// builder 开始
  public CreateSheetFilter(){}

  public CreateSheetFilter(Builder builder){
      this.range = builder.range;
      this.col = builder.col;
      this.condition = builder.condition;
  }

    public static class Builder {
        private String range;
        private String col;
        private Condition condition;
        public Builder range(String range) {
             this.range = range;
             return this;
        }
    
        public Builder col(String col) {
             this.col = col;
             return this;
        }
    
        public Builder condition(Condition condition) {
             this.condition = condition;
             return this;
        }
    
    
    public CreateSheetFilter build(){
        return new CreateSheetFilter(this);
      }
    }

    public static Builder newBuilder() {
        return new Builder();
    }
}
