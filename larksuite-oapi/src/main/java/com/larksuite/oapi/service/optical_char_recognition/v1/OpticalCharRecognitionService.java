// Code generated by lark suite oapi sdk gen
package com.larksuite.oapi.service.optical_char_recognition.v1;

import com.larksuite.oapi.core.Config;
import com.larksuite.oapi.core.Transport;
import com.larksuite.oapi.core.request.RequestOptions;
import com.larksuite.oapi.core.response.RawResponse;
import com.larksuite.oapi.core.token.AccessTokenType;
import com.larksuite.oapi.core.utils.Sets;
import com.larksuite.oapi.core.utils.UnmarshalRespUtil;
import com.larksuite.oapi.service.optical_char_recognition.v1.model.BasicRecognizeImageReq;
import com.larksuite.oapi.service.optical_char_recognition.v1.model.BasicRecognizeImageResp;

public class OpticalCharRecognitionService {
    private final Image image;

    public OpticalCharRecognitionService(Config config) {
        this.image = new Image(config);
    }

    public Image image() {
        return image;
    }

    public static class Image {
        private final Config config;

        public Image(Config config) {
            this.config = config;
        }

        public BasicRecognizeImageResp basicRecognize(BasicRecognizeImageReq req, RequestOptions reqOptions) throws Exception {
            // 请求参数选项
            if (reqOptions == null) {
                reqOptions = new RequestOptions();
            }

            // 发起请求
            RawResponse httpResponse = Transport.send(config, reqOptions, "POST"
                    , "/open-apis/optical_char_recognition/v1/image/basic_recognize"
                    , Sets.newHashSet(AccessTokenType.Tenant)
                    , req);

            // 反序列化
            BasicRecognizeImageResp resp = UnmarshalRespUtil.unmarshalResp(httpResponse, BasicRecognizeImageResp.class);
            resp.setRawResponse(httpResponse);
            return resp;
        }

        public BasicRecognizeImageResp basicRecognize(BasicRecognizeImageReq req) throws Exception {
            // 请求参数选项
            RequestOptions reqOptions = new RequestOptions();

            // 发起请求
            RawResponse httpResponse = Transport.send(config, reqOptions, "POST"
                    , "/open-apis/optical_char_recognition/v1/image/basic_recognize"
                    , Sets.newHashSet(AccessTokenType.Tenant)
                    , req);

            // 反序列化
            BasicRecognizeImageResp resp = UnmarshalRespUtil.unmarshalResp(httpResponse, BasicRecognizeImageResp.class);
            resp.setRawResponse(httpResponse);
            return resp;
        }
    }

}