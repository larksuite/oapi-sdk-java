// Code generated by lark suite oapi sdk gen
package com.larksuite.oapi.service.admin.v1.model;
import com.larksuite.oapi.service.admin.v1.enums.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.SerializedName;
import com.larksuite.oapi.core.annotation.Body;
import com.larksuite.oapi.core.annotation.Path;
import com.larksuite.oapi.core.annotation.Query;
import java.io.File;
import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import com.larksuite.oapi.core.utils.Strings;
import com.larksuite.oapi.core.response.BaseResponse;
public class Administrator {
    @SerializedName("user_id")
    private Long userId;
    @SerializedName("is_super_administrator")
    private Boolean isSuperAdministrator;
    @SerializedName("is_administrator")
    private Boolean isAdministrator;
    public Long getUserId() {
        return this.userId;
    }

    public void setUserId(Long userId) {
        this.userId = userId;
    }

    public Boolean getIsSuperAdministrator() {
        return this.isSuperAdministrator;
    }

    public void setIsSuperAdministrator(Boolean isSuperAdministrator) {
        this.isSuperAdministrator = isSuperAdministrator;
    }

    public Boolean getIsAdministrator() {
        return this.isAdministrator;
    }

    public void setIsAdministrator(Boolean isAdministrator) {
        this.isAdministrator = isAdministrator;
    }


// builder 开始
  public Administrator(){}

  public Administrator(Builder builder){
      this.userId = builder.userId;
      this.isSuperAdministrator = builder.isSuperAdministrator;
      this.isAdministrator = builder.isAdministrator;
  }

    public static class Builder {
        private Long userId;
        private Boolean isSuperAdministrator;
        private Boolean isAdministrator;
        public Builder userId(Long userId) {
             this.userId = userId;
             return this;
        }
    
        public Builder isSuperAdministrator(Boolean isSuperAdministrator) {
             this.isSuperAdministrator = isSuperAdministrator;
             return this;
        }
    
        public Builder isAdministrator(Boolean isAdministrator) {
             this.isAdministrator = isAdministrator;
             return this;
        }
    
    
    public Administrator build(){
        return new Administrator(this);
      }
    }

    public static Builder newBuilder() {
        return new Builder();
    }
}
