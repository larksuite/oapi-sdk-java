// Code generated by lark suite oapi sdk gen
package com.larksuite.oapi.service.approval.v4.model;
import com.larksuite.oapi.service.approval.v4.enums.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.SerializedName;
import com.larksuite.oapi.core.annotation.Body;
import com.larksuite.oapi.core.annotation.Path;
import com.larksuite.oapi.core.annotation.Query;
import java.io.File;
import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import com.larksuite.oapi.core.utils.Strings;
import com.larksuite.oapi.core.response.BaseResponse;
public class CommentAtInfo {
    @SerializedName("user_id")
    private Long userId;
    @SerializedName("name")
    private String name;
    @SerializedName("offset")
    private Long offset;
    public Long getUserId() {
        return this.userId;
    }

    public void setUserId(Long userId) {
        this.userId = userId;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Long getOffset() {
        return this.offset;
    }

    public void setOffset(Long offset) {
        this.offset = offset;
    }


// builder 开始
  public CommentAtInfo(){}

  public CommentAtInfo(Builder builder){
      this.userId = builder.userId;
      this.name = builder.name;
      this.offset = builder.offset;
  }

    public static class Builder {
        private Long userId;
        private String name;
        private Long offset;
        public Builder userId(Long userId) {
             this.userId = userId;
             return this;
        }
    
        public Builder name(String name) {
             this.name = name;
             return this;
        }
    
        public Builder offset(Long offset) {
             this.offset = offset;
             return this;
        }
    
    
    public CommentAtInfo build(){
        return new CommentAtInfo(this);
      }
    }

    public static Builder newBuilder() {
        return new Builder();
    }
}
