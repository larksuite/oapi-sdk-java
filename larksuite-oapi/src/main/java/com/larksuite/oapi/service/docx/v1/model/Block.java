// Code generated by lark suite oapi sdk gen
package com.larksuite.oapi.service.docx.v1.model;
import com.larksuite.oapi.service.docx.v1.enums.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.SerializedName;
import com.larksuite.oapi.core.annotation.Body;
import com.larksuite.oapi.core.annotation.Path;
import com.larksuite.oapi.core.annotation.Query;
import java.io.File;
import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import com.larksuite.oapi.core.utils.Strings;
import com.larksuite.oapi.core.response.BaseResponse;
public class Block {
    @SerializedName("block_id")
    private String blockId;
    @SerializedName("parent_id")
    private String parentId;
    @SerializedName("children")
    private String[] children;
    @SerializedName("block_type")
    private Integer blockType;
    @SerializedName("page")
    private Text page;
    @SerializedName("text")
    private Text text;
    @SerializedName("heading1")
    private Text heading1;
    @SerializedName("heading2")
    private Text heading2;
    @SerializedName("heading3")
    private Text heading3;
    @SerializedName("heading4")
    private Text heading4;
    @SerializedName("heading5")
    private Text heading5;
    @SerializedName("heading6")
    private Text heading6;
    @SerializedName("heading7")
    private Text heading7;
    @SerializedName("heading8")
    private Text heading8;
    @SerializedName("heading9")
    private Text heading9;
    @SerializedName("bullet")
    private Text bullet;
    @SerializedName("ordered")
    private Text ordered;
    @SerializedName("code")
    private Text code;
    @SerializedName("quote")
    private Text quote;
    @SerializedName("equation")
    private Text equation;
    @SerializedName("todo")
    private Text todo;
    @SerializedName("bitable")
    private Bitable bitable;
    @SerializedName("callout")
    private Callout callout;
    @SerializedName("chat_card")
    private ChatCard chatCard;
    @SerializedName("diagram")
    private Diagram diagram;
    @SerializedName("divider")
    private Divider divider;
    @SerializedName("file")
    private File file;
    @SerializedName("grid")
    private Grid grid;
    @SerializedName("grid_column")
    private GridColumn gridColumn;
    @SerializedName("iframe")
    private Iframe iframe;
    @SerializedName("image")
    private Image image;
    @SerializedName("isv")
    private Isv isv;
    @SerializedName("mindnote")
    private Mindnote mindnote;
    @SerializedName("sheet")
    private Sheet sheet;
    @SerializedName("table")
    private Table table;
    @SerializedName("table_cell")
    private TableCell tableCell;
    @SerializedName("view")
    private View view;
    @SerializedName("undefined")
    private Undefined undefined;
    @SerializedName("quote_container")
    private QuoteContainer quoteContainer;
    public String getBlockId() {
        return this.blockId;
    }

    public void setBlockId(String blockId) {
        this.blockId = blockId;
    }

    public String getParentId() {
        return this.parentId;
    }

    public void setParentId(String parentId) {
        this.parentId = parentId;
    }

    public String[] getChildren() {
        return this.children;
    }

    public void setChildren(String[] children) {
        this.children = children;
    }

    public Integer getBlockType() {
        return this.blockType;
    }

    public void setBlockType(Integer blockType) {
        this.blockType = blockType;
    }

    public Text getPage() {
        return this.page;
    }

    public void setPage(Text page) {
        this.page = page;
    }

    public Text getText() {
        return this.text;
    }

    public void setText(Text text) {
        this.text = text;
    }

    public Text getHeading1() {
        return this.heading1;
    }

    public void setHeading1(Text heading1) {
        this.heading1 = heading1;
    }

    public Text getHeading2() {
        return this.heading2;
    }

    public void setHeading2(Text heading2) {
        this.heading2 = heading2;
    }

    public Text getHeading3() {
        return this.heading3;
    }

    public void setHeading3(Text heading3) {
        this.heading3 = heading3;
    }

    public Text getHeading4() {
        return this.heading4;
    }

    public void setHeading4(Text heading4) {
        this.heading4 = heading4;
    }

    public Text getHeading5() {
        return this.heading5;
    }

    public void setHeading5(Text heading5) {
        this.heading5 = heading5;
    }

    public Text getHeading6() {
        return this.heading6;
    }

    public void setHeading6(Text heading6) {
        this.heading6 = heading6;
    }

    public Text getHeading7() {
        return this.heading7;
    }

    public void setHeading7(Text heading7) {
        this.heading7 = heading7;
    }

    public Text getHeading8() {
        return this.heading8;
    }

    public void setHeading8(Text heading8) {
        this.heading8 = heading8;
    }

    public Text getHeading9() {
        return this.heading9;
    }

    public void setHeading9(Text heading9) {
        this.heading9 = heading9;
    }

    public Text getBullet() {
        return this.bullet;
    }

    public void setBullet(Text bullet) {
        this.bullet = bullet;
    }

    public Text getOrdered() {
        return this.ordered;
    }

    public void setOrdered(Text ordered) {
        this.ordered = ordered;
    }

    public Text getCode() {
        return this.code;
    }

    public void setCode(Text code) {
        this.code = code;
    }

    public Text getQuote() {
        return this.quote;
    }

    public void setQuote(Text quote) {
        this.quote = quote;
    }

    public Text getEquation() {
        return this.equation;
    }

    public void setEquation(Text equation) {
        this.equation = equation;
    }

    public Text getTodo() {
        return this.todo;
    }

    public void setTodo(Text todo) {
        this.todo = todo;
    }

    public Bitable getBitable() {
        return this.bitable;
    }

    public void setBitable(Bitable bitable) {
        this.bitable = bitable;
    }

    public Callout getCallout() {
        return this.callout;
    }

    public void setCallout(Callout callout) {
        this.callout = callout;
    }

    public ChatCard getChatCard() {
        return this.chatCard;
    }

    public void setChatCard(ChatCard chatCard) {
        this.chatCard = chatCard;
    }

    public Diagram getDiagram() {
        return this.diagram;
    }

    public void setDiagram(Diagram diagram) {
        this.diagram = diagram;
    }

    public Divider getDivider() {
        return this.divider;
    }

    public void setDivider(Divider divider) {
        this.divider = divider;
    }

    public File getFile() {
        return this.file;
    }

    public void setFile(File file) {
        this.file = file;
    }

    public Grid getGrid() {
        return this.grid;
    }

    public void setGrid(Grid grid) {
        this.grid = grid;
    }

    public GridColumn getGridColumn() {
        return this.gridColumn;
    }

    public void setGridColumn(GridColumn gridColumn) {
        this.gridColumn = gridColumn;
    }

    public Iframe getIframe() {
        return this.iframe;
    }

    public void setIframe(Iframe iframe) {
        this.iframe = iframe;
    }

    public Image getImage() {
        return this.image;
    }

    public void setImage(Image image) {
        this.image = image;
    }

    public Isv getIsv() {
        return this.isv;
    }

    public void setIsv(Isv isv) {
        this.isv = isv;
    }

    public Mindnote getMindnote() {
        return this.mindnote;
    }

    public void setMindnote(Mindnote mindnote) {
        this.mindnote = mindnote;
    }

    public Sheet getSheet() {
        return this.sheet;
    }

    public void setSheet(Sheet sheet) {
        this.sheet = sheet;
    }

    public Table getTable() {
        return this.table;
    }

    public void setTable(Table table) {
        this.table = table;
    }

    public TableCell getTableCell() {
        return this.tableCell;
    }

    public void setTableCell(TableCell tableCell) {
        this.tableCell = tableCell;
    }

    public View getView() {
        return this.view;
    }

    public void setView(View view) {
        this.view = view;
    }

    public Undefined getUndefined() {
        return this.undefined;
    }

    public void setUndefined(Undefined undefined) {
        this.undefined = undefined;
    }

    public QuoteContainer getQuoteContainer() {
        return this.quoteContainer;
    }

    public void setQuoteContainer(QuoteContainer quoteContainer) {
        this.quoteContainer = quoteContainer;
    }


// builder 开始
  public Block(){}

  public Block(Builder builder){
      this.blockId = builder.blockId;
      this.parentId = builder.parentId;
      this.children = builder.children;
      this.blockType = builder.blockType;
      this.page = builder.page;
      this.text = builder.text;
      this.heading1 = builder.heading1;
      this.heading2 = builder.heading2;
      this.heading3 = builder.heading3;
      this.heading4 = builder.heading4;
      this.heading5 = builder.heading5;
      this.heading6 = builder.heading6;
      this.heading7 = builder.heading7;
      this.heading8 = builder.heading8;
      this.heading9 = builder.heading9;
      this.bullet = builder.bullet;
      this.ordered = builder.ordered;
      this.code = builder.code;
      this.quote = builder.quote;
      this.equation = builder.equation;
      this.todo = builder.todo;
      this.bitable = builder.bitable;
      this.callout = builder.callout;
      this.chatCard = builder.chatCard;
      this.diagram = builder.diagram;
      this.divider = builder.divider;
      this.file = builder.file;
      this.grid = builder.grid;
      this.gridColumn = builder.gridColumn;
      this.iframe = builder.iframe;
      this.image = builder.image;
      this.isv = builder.isv;
      this.mindnote = builder.mindnote;
      this.sheet = builder.sheet;
      this.table = builder.table;
      this.tableCell = builder.tableCell;
      this.view = builder.view;
      this.undefined = builder.undefined;
      this.quoteContainer = builder.quoteContainer;
  }

    public static class Builder {
        private String blockId;
        private String parentId;
        private String[] children;
        private Integer blockType;
        private Text page;
        private Text text;
        private Text heading1;
        private Text heading2;
        private Text heading3;
        private Text heading4;
        private Text heading5;
        private Text heading6;
        private Text heading7;
        private Text heading8;
        private Text heading9;
        private Text bullet;
        private Text ordered;
        private Text code;
        private Text quote;
        private Text equation;
        private Text todo;
        private Bitable bitable;
        private Callout callout;
        private ChatCard chatCard;
        private Diagram diagram;
        private Divider divider;
        private File file;
        private Grid grid;
        private GridColumn gridColumn;
        private Iframe iframe;
        private Image image;
        private Isv isv;
        private Mindnote mindnote;
        private Sheet sheet;
        private Table table;
        private TableCell tableCell;
        private View view;
        private Undefined undefined;
        private QuoteContainer quoteContainer;
        public Builder blockId(String blockId) {
             this.blockId = blockId;
             return this;
        }
    
        public Builder parentId(String parentId) {
             this.parentId = parentId;
             return this;
        }
    
        public Builder children(String[] children) {
             this.children = children;
             return this;
        }
    
        public Builder blockType(Integer blockType) {
             this.blockType = blockType;
             return this;
        }
        public Builder blockType(com.larksuite.oapi.service.docx.v1.enums.BlockTypeEnum blockType) {
             this.blockType = blockType.getValue();
             return this;
        }
    
        public Builder page(Text page) {
             this.page = page;
             return this;
        }
    
        public Builder text(Text text) {
             this.text = text;
             return this;
        }
    
        public Builder heading1(Text heading1) {
             this.heading1 = heading1;
             return this;
        }
    
        public Builder heading2(Text heading2) {
             this.heading2 = heading2;
             return this;
        }
    
        public Builder heading3(Text heading3) {
             this.heading3 = heading3;
             return this;
        }
    
        public Builder heading4(Text heading4) {
             this.heading4 = heading4;
             return this;
        }
    
        public Builder heading5(Text heading5) {
             this.heading5 = heading5;
             return this;
        }
    
        public Builder heading6(Text heading6) {
             this.heading6 = heading6;
             return this;
        }
    
        public Builder heading7(Text heading7) {
             this.heading7 = heading7;
             return this;
        }
    
        public Builder heading8(Text heading8) {
             this.heading8 = heading8;
             return this;
        }
    
        public Builder heading9(Text heading9) {
             this.heading9 = heading9;
             return this;
        }
    
        public Builder bullet(Text bullet) {
             this.bullet = bullet;
             return this;
        }
    
        public Builder ordered(Text ordered) {
             this.ordered = ordered;
             return this;
        }
    
        public Builder code(Text code) {
             this.code = code;
             return this;
        }
    
        public Builder quote(Text quote) {
             this.quote = quote;
             return this;
        }
    
        public Builder equation(Text equation) {
             this.equation = equation;
             return this;
        }
    
        public Builder todo(Text todo) {
             this.todo = todo;
             return this;
        }
    
        public Builder bitable(Bitable bitable) {
             this.bitable = bitable;
             return this;
        }
    
        public Builder callout(Callout callout) {
             this.callout = callout;
             return this;
        }
    
        public Builder chatCard(ChatCard chatCard) {
             this.chatCard = chatCard;
             return this;
        }
    
        public Builder diagram(Diagram diagram) {
             this.diagram = diagram;
             return this;
        }
    
        public Builder divider(Divider divider) {
             this.divider = divider;
             return this;
        }
    
        public Builder file(File file) {
             this.file = file;
             return this;
        }
    
        public Builder grid(Grid grid) {
             this.grid = grid;
             return this;
        }
    
        public Builder gridColumn(GridColumn gridColumn) {
             this.gridColumn = gridColumn;
             return this;
        }
    
        public Builder iframe(Iframe iframe) {
             this.iframe = iframe;
             return this;
        }
    
        public Builder image(Image image) {
             this.image = image;
             return this;
        }
    
        public Builder isv(Isv isv) {
             this.isv = isv;
             return this;
        }
    
        public Builder mindnote(Mindnote mindnote) {
             this.mindnote = mindnote;
             return this;
        }
    
        public Builder sheet(Sheet sheet) {
             this.sheet = sheet;
             return this;
        }
    
        public Builder table(Table table) {
             this.table = table;
             return this;
        }
    
        public Builder tableCell(TableCell tableCell) {
             this.tableCell = tableCell;
             return this;
        }
    
        public Builder view(View view) {
             this.view = view;
             return this;
        }
    
        public Builder undefined(Undefined undefined) {
             this.undefined = undefined;
             return this;
        }
    
        public Builder quoteContainer(QuoteContainer quoteContainer) {
             this.quoteContainer = quoteContainer;
             return this;
        }
    
    
    public Block build(){
        return new Block(this);
      }
    }

    public static Builder newBuilder() {
        return new Builder();
    }
}
