// Code generated by lark suite oapi sdk gen
package com.larksuite.oapi.service.search.v2.model;
import com.larksuite.oapi.service.search.v2.enums.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.SerializedName;
import com.larksuite.oapi.core.annotation.Body;
import com.larksuite.oapi.core.annotation.Path;
import com.larksuite.oapi.core.annotation.Query;
import java.io.File;
import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import com.larksuite.oapi.core.utils.Strings;
import com.larksuite.oapi.core.response.BaseResponse;
public class SchemaSortOptions {
    @SerializedName("priority")
    private Integer priority;
    @SerializedName("order")
    private String order;
    public Integer getPriority() {
        return this.priority;
    }

    public void setPriority(Integer priority) {
        this.priority = priority;
    }

    public String getOrder() {
        return this.order;
    }

    public void setOrder(String order) {
        this.order = order;
    }


// builder 开始
  public SchemaSortOptions(){}

  public SchemaSortOptions(Builder builder){
      this.priority = builder.priority;
      this.order = builder.order;
  }

    public static class Builder {
        private Integer priority;
        private String order;
        public Builder priority(Integer priority) {
             this.priority = priority;
             return this;
        }
        public Builder priority(com.larksuite.oapi.service.search.v2.enums.SchemaSortPriorityEnum priority) {
             this.priority = priority.getValue();
             return this;
        }
    
        public Builder order(String order) {
             this.order = order;
             return this;
        }
        public Builder order(com.larksuite.oapi.service.search.v2.enums.SchemaSortOrderEnum order) {
             this.order = order.getValue();
             return this;
        }
    
    
    public SchemaSortOptions build(){
        return new SchemaSortOptions(this);
      }
    }

    public static Builder newBuilder() {
        return new Builder();
    }
}
