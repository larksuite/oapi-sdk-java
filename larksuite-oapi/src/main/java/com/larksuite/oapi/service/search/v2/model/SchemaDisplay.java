// Code generated by lark suite oapi sdk gen
package com.larksuite.oapi.service.search.v2.model;
import com.larksuite.oapi.service.search.v2.enums.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.SerializedName;
import com.larksuite.oapi.core.annotation.Body;
import com.larksuite.oapi.core.annotation.Path;
import com.larksuite.oapi.core.annotation.Query;
import java.io.File;
import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import com.larksuite.oapi.core.utils.Strings;
import com.larksuite.oapi.core.response.BaseResponse;
public class SchemaDisplay {
    @SerializedName("card_key")
    private String cardKey;
    @SerializedName("fields_mapping")
    private SchemaDisplayFieldMapping[] fieldsMapping;
    public String getCardKey() {
        return this.cardKey;
    }

    public void setCardKey(String cardKey) {
        this.cardKey = cardKey;
    }

    public SchemaDisplayFieldMapping[] getFieldsMapping() {
        return this.fieldsMapping;
    }

    public void setFieldsMapping(SchemaDisplayFieldMapping[] fieldsMapping) {
        this.fieldsMapping = fieldsMapping;
    }


// builder 开始
  public SchemaDisplay(){}

  public SchemaDisplay(Builder builder){
      this.cardKey = builder.cardKey;
      this.fieldsMapping = builder.fieldsMapping;
  }

    public static class Builder {
        private String cardKey;
        private SchemaDisplayFieldMapping[] fieldsMapping;
        public Builder cardKey(String cardKey) {
             this.cardKey = cardKey;
             return this;
        }
        public Builder cardKey(com.larksuite.oapi.service.search.v2.enums.CardKeyEnum cardKey) {
             this.cardKey = cardKey.getValue();
             return this;
        }
    
        public Builder fieldsMapping(SchemaDisplayFieldMapping[] fieldsMapping) {
             this.fieldsMapping = fieldsMapping;
             return this;
        }
    
    
    public SchemaDisplay build(){
        return new SchemaDisplay(this);
      }
    }

    public static Builder newBuilder() {
        return new Builder();
    }
}
